package com.dslfoundry.statemachine.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptEvent = createDescriptorForEvent();
  /*package*/ final ConceptDescriptor myConceptState = createDescriptorForState();
  /*package*/ final ConceptDescriptor myConceptStateMachine = createDescriptorForStateMachine();
  /*package*/ final ConceptDescriptor myConceptTransition = createDescriptorForTransition();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptEvent, myConceptState, myConceptStateMachine, myConceptTransition);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Event:
        return myConceptEvent;
      case LanguageConceptSwitch.State:
        return myConceptState;
      case LanguageConceptSwitch.StateMachine:
        return myConceptStateMachine;
      case LanguageConceptSwitch.Transition:
        return myConceptTransition;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForEvent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("com.dslfoundry.statemachine", "Event", 0xdac36cdfb92546cfL, 0x8a2c2b6a1b73035cL, 0x51c6850f8a2fce2dL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:3177cfff-838c-465b-a99f-733b3486f4ac(com.dslfoundry.statemachine.structure)/5892543464250265133");
    b.version(3);
    b.alias("event");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForState() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("com.dslfoundry.statemachine", "State", 0xdac36cdfb92546cfL, 0x8a2c2b6a1b73035cL, 0x51c6850f8a2fce2cL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:3177cfff-838c-465b-a99f-733b3486f4ac(com.dslfoundry.statemachine.structure)/5892543464250265132");
    b.version(3);
    b.property("isInitial", 0x6b05dff7a3dddcd8L).type(PrimitiveTypeId.BOOLEAN).origin("7711816191640984792").done();
    b.aggregate("states", 0x51c6850f8a2fce3aL).target(0xdac36cdfb92546cfL, 0x8a2c2b6a1b73035cL, 0x51c6850f8a2fce2cL).optional(true).ordered(true).multiple(true).origin("5892543464250265146").done();
    b.alias("state");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStateMachine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("com.dslfoundry.statemachine", "StateMachine", 0xdac36cdfb92546cfL, 0x8a2c2b6a1b73035cL, 0x51c6850f8a2fce29L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:3177cfff-838c-465b-a99f-733b3486f4ac(com.dslfoundry.statemachine.structure)/5892543464250265129");
    b.version(3);
    b.aggregate("states", 0x51c6850f8a2fce31L).target(0xdac36cdfb92546cfL, 0x8a2c2b6a1b73035cL, 0x51c6850f8a2fce2cL).optional(true).ordered(true).multiple(true).origin("5892543464250265137").done();
    b.aggregate("transitions", 0x51c6850f8a2fce33L).target(0xdac36cdfb92546cfL, 0x8a2c2b6a1b73035cL, 0x51c6850f8a2fce2eL).optional(true).ordered(true).multiple(true).origin("5892543464250265139").done();
    b.aggregate("events", 0x51c6850f8a2fce36L).target(0xdac36cdfb92546cfL, 0x8a2c2b6a1b73035cL, 0x51c6850f8a2fce2dL).optional(true).ordered(true).multiple(true).origin("5892543464250265142").done();
    b.alias("statemachine");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTransition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("com.dslfoundry.statemachine", "Transition", 0xdac36cdfb92546cfL, 0x8a2c2b6a1b73035cL, 0x51c6850f8a2fce2eL);
    b.class_(false, false, false);
    b.origin("r:3177cfff-838c-465b-a99f-733b3486f4ac(com.dslfoundry.statemachine.structure)/5892543464250265134");
    b.version(3);
    b.associate("source", 0x51c6850f8a2fce3cL).target(0xdac36cdfb92546cfL, 0x8a2c2b6a1b73035cL, 0x51c6850f8a2fce2cL).optional(false).origin("5892543464250265148").done();
    b.associate("target", 0x51c6850f8a2fce3eL).target(0xdac36cdfb92546cfL, 0x8a2c2b6a1b73035cL, 0x51c6850f8a2fce2cL).optional(false).origin("5892543464250265150").done();
    b.associate("trigger", 0x51c6850f8a2fce41L).target(0xdac36cdfb92546cfL, 0x8a2c2b6a1b73035cL, 0x51c6850f8a2fce2dL).optional(false).origin("5892543464250265153").done();
    return b.create();
  }
}
